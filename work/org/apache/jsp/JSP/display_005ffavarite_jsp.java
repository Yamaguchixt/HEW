/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.41
 * Generated at: 2015-02-13 10:44:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class display_005ffavarite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\r\n");
      out.write("        <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" />\r\n");
      out.write("         <link href=\"/HEW/CSS/common.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("        <script type=\"text/javascript\" src=\"/HEW/JavaScript/jquery-1.11.2.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\" src=\"/HEW/JavaScript/common.js\"></script>\r\n");
      out.write("        \r\n");
      out.write("        <title>お気に入りランキング</title>\r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    \tbody {\r\n");
      out.write("    \t\tcolor :#FFF;\r\n");
      out.write("    \t}\r\n");
      out.write("   \t\th1{\r\n");
      out.write("   \t\t\tfont-size : 3em;\r\n");
      out.write("   \t\t\ttext-align :center;\r\n");
      out.write("   \t\t\tmargin :30px 30px;\r\n");
      out.write("   \t\t} \t\r\n");
      out.write("   \t\tli {\r\n");
      out.write("   \t\tdisplay :block;\r\n");
      out.write("   \t\twidth :300px;\r\n");
      out.write("   \t\tmargin:50px;\r\n");
      out.write("   \t\tfloat :left;\r\n");
      out.write("   \t\t}\r\n");
      out.write("   \t\t#rank1 {\r\n");
      out.write("   \t\t\twidth :1000px;\r\n");
      out.write("   \t\t\tmargin :auto;\r\n");
      out.write("   \t\t\tmargin-top :100px;\r\n");
      out.write("   \t\t\tfont-size :2em;\r\n");
      out.write("   \t\t}\r\n");
      out.write("   \t\t#rank1 span {\r\n");
      out.write("   \t\t\tfont-size :2em;\r\n");
      out.write("   \t\t}\r\n");
      out.write("   \t\t.low {\r\n");
      out.write("   \t\twidth :120px;\r\n");
      out.write("   \t\tmargin :30px;\r\n");
      out.write("   \t\t}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	Class.forName("com.mysql.jdbc.Driver");
	Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/HEW","HEW","HEW");
	Statement statement = connection.createStatement();
	
	//championテーブルの行数を把握する
	String sqlCOUNT = "SELECT COUNT(*) FROM champions ";
	int championNumber = 0;
	ResultSet resultset = statement.executeQuery(sqlCOUNT);
	if(resultset.next()){
		championNumber = resultset.getInt(1);
	}
	
	//championテーブルの行数だけString配列をつくる
	String[] ranking = new String[championNumber+1];
	String sqlSelect = " SELECT  championname FROM champions ORDER BY favarite DESC";
	int rank = 1;//ランキングと配列の添字を一致させる
	
	//SQLを実行し、配列にランキング順にchampion名をいれていく
	ResultSet resultset2 = statement.executeQuery(sqlSelect);
	while(resultset2.next()){
		ranking[rank] = resultset2.getString(1);
		rank ++;
	}
	

      out.write("\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("\t<h1> 最新ランキング</h1>\r\n");
      out.write("\t\t<ol>\r\n");
      out.write("\t\t\t<li id=\"rank1\">1位\t<span>");
      out.print( ranking[1] );
      out.write("</span><img src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/splash/");
      out.print( ranking[1]);
      out.write("_0.jpg\" alt=\"img\" width=\"1000\" height=\"600\"></li>\r\n");
      out.write("\t\t\t<li>2位 ");
      out.print( ranking[2] );
      out.write("<img src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/");
      out.print( ranking[2]);
      out.write("_0.jpg\" /></li>\r\n");
      out.write("\t\t\t<li>3位\t");
      out.print( ranking[3] );
      out.write("<img src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/");
      out.print( ranking[3]);
      out.write("_0.jpg\" /></li>\r\n");
      out.write("\t\t\t<li>4位 ");
      out.print( ranking[4] );
      out.write("<img src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/");
      out.print( ranking[4]);
      out.write("_0.jpg\" /></li>\r\n");
      out.write("\t\t\t<!--  5位からはアイコン表示 -->\r\n");
      out.write("\t\t\t<li class=\"low\">5位 ");
      out.print( ranking[5] );
      out.write("<img src=\"http://ddragon.leagueoflegends.com/cdn/5.2.1/img/champion/");
      out.print( ranking[5] );
      out.write(".png\" /></li>\r\n");
      out.write("\t\t\t<li class=\"low\">6位 ");
      out.print( ranking[6] );
      out.write("<img src=\"http://ddragon.leagueoflegends.com/cdn/5.2.1/img/champion/");
      out.print( ranking[6] );
      out.write(".png\" /></li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</ol>\r\n");
      out.write("</div><!--  close wrapper -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
